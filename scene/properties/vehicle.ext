;SDL
{PatherID  "vehicle.large"}

{obstacleID "tank"}
{Simulation {Able 1}}
{props "steel" "vehicle" "vehicle_common" "obstacle_ignore_height" "inventory_transfer" "unit"}
{able "repaired" "minimap"}
(mod "mp"
{able "emit_passangers_on_enemy"}
)
{lodclass "vehicle_small"}
{collider "vehicle"}
{extender "bodykit"}
{sensor
	{Visor "main"
		{vision "vehicle_main"}
		{bone "visor"}
	}
	{RecognizeTime 0.01}
	{InformRange 200}
;	{InformRange 200 200}	;disabled in MOW2
}

{boarder}
{placer {crew}}

(define "fuelbag"
	{FuelBag
		{volume %volume }   ; liters
		{rate   %rate }    ; liters per kilometer
		{remain %remain }
		{fuel "fuel"}
	}
)

(define "v_std"
	{volume "%vol%n"
		{component "%vol"}
		{tags "%vol" "%vol_armor%tag" %add}
	}
)
(define "v_body" ("v_std" vol(body) n(%n) tag(%t) add()))
(define "v_turret" ("v_std" vol(turret) n(%n) tag(%t) add()))
(define "v_gun" ("v_std" vol(gun) n(%n) tag(%t) add("no_target")))
(define "v_engine" ("v_std" vol(engine) n(%n) tag(%t) add()))

(define "trackl_support_parameters"
	{parameters "id=trackleft;radius=%r;support=1;"}
)
(define "trackr_support_parameters"
	{parameters "id=trackright;radius=%r;support=1;"}
)
(define "wheel_support_parameters"
	{parameters "radius=%r;support=1;"}
)
(define "wheell_support_parameters"
	{parameters "id=wheelleft;radius=%r;support=1;"}
)
(define "wheelr_support_parameters"
	{parameters "id=wheelright;radius=%r;support=1;"}
)
(define "support_bones"
	{bone "wheell%n"
		("%lname_support_parameters" r(%r))
	}
	{bone "wheelr%n"
		("%rname_support_parameters" r(%r))
	}
)
(define "bone_rotator"
	{extender "bone_rotator"
		{"watch.turret"}
	}
)
(define "brain_vehicle"
	{brain "vehicle"
		{state "vehicle"}
		{const "crush/min_danger_zone_time" 	1}
		{const "crush/min_danger_zone_length"	1}
		{const "withdraw/cooldown"		30} ; sec
	}
	{Weaponry
		{ManualAccuracy 1.0}	;теперь это обязательный блок
	}

)
{## extender "detail"
	{random}
}
{## extender "d_a"
	{on}
}
;{RimLight}	;Disabled in MOW2
{IgnoreSaturation 1}
;===============================CtA
(define "brain_vehicle"
	{brain "vehicle"
		{state "vehicle"}
		{const "crush/min_danger_zone_time" 	1}
		{const "crush/min_danger_zone_length"	1}
	}
	{Weaponry
		{ManualAccuracy 1.0}	;теперь это обязательный блок
	}
)
(define "rate"   
	{rate (* 20 %r)}  
)
;===============================

(define "chassis_defaults"
	{FuelBag
		{volume 200 }	; liters
		{rate	20 }   	; liters per kilometer
		{remain 150 }
		{fuel "fuel"}
	}
	{speed
		{Slow	10	}	; km/h
		{Normal	17	}
		{Fast	30	}
	}
)

(define "wheel"
	{volume %0
		{thickness 0.5}
		{tags "wheel" "for_buksir"}
		{component %0}
		{able {NoWoundDecal}}
	}
	{component %0
		{RepairTime 10}
		{tags "wheel"}
	}
)

(define "tracks"
	{volume "trackleft"
		{thickness 20}
		{tags "mover" "track" "for_buksir"}
		{able {NoWoundDecal}}
	}
	{volume "trackright"
		{thickness 20}
		{tags "mover" "track" "for_buksir"}
		{able {NoWoundDecal}}
	}
	{component "trackleft"
		{RepairTime 10}
		{tags "mover" "track"}
	}
	{component "trackright"
		{RepairTime 10}
		{tags "mover" "track"}
	}
)

(define "car_trace"
    {Track %wheell
	    {Tracer
    		{View %fx}
    		{Bone %bonel}
	    	{Step %step}
    	}
    }
    {Track %wheelr
    	{Tracer 
	    	{View %fx}
    		{Bone %boner}
    		{Step %step}
	    }
    }
)

(define "tank_trace_ex"
    {Track "left"
	    {Tracer
    		{View %fx} ; "tracks"
    		{Bone %boneleft}
	    	{Step %step}			; 0.7 meters
    	}
		{TextureScroller
	    	{Bone "TrackL"}
    		{Length %len}		; 0.6 meters per animation
    	}
    }
    {Track "right"
    	{Tracer 
	    	{View %fx}
    		{Bone %boneright}
    		{Step %step}			; in meters
	    }
		{TextureScroller
	    	{Bone "TrackR"}
    		{Length %len}		; meters per animation
    	}
    }
)

(define "tank_trace"
	("tank_trace_ex" fx(%fx) step(%step) len(%len) boneleft("FXtraceL1") boneright("FXtraceR1"))
)

(mod "mp"
	{able "ally_crew"}
)

(mod "coop"
	{able "ally_crew"}
)
(define "glass_volume"
	{volume %0
		{thickness 0.1}
		{tags "glass"}
	}
)
(define "shield"
	{armor
		{setting "shield"
			{thickness %0}
			{durability {blast {value 100}} {pierce  {koef 999}}}
			{threshold {blast {value %0}}}
			{volumes "shield*"}
			{health_reducing {pierce {koef 0.0001}} {blast {koef 0}} }
		}
	}
)
(define "bodykit_item"
{extender "bodykit"
	{%name
		{delay %delay}
		{drop_on_move %drop_on_move}
		{%entity %bone {no_link}}
	}	
}
)
(define "bodykit_trench_cannon"
	("bodykit_item" name(%name) delay(10) drop_on_move(0) entity(%entity) bone(""))
)
(define "bodykit_trench_cannon_med"
	("bodykit_item" name(%name) delay(15) drop_on_move(0) entity(%entity) bone(""))
)
(define "bodykit_trench_cannon_big"
	("bodykit_item" name(%name) delay(20) drop_on_move(0) entity(%entity) bone(""))
)
(define "bodykit_sandbag"
	("bodykit_item" name(%name) delay(10) drop_on_move(0) entity(%entity) bone(""))
)
(define "round_sandbag"
	("bodykit_sandbag" name("round_sandbag") entity("sandbag_woodbeam1_round"))
)
(define "round_sandbag2"
	("bodykit_sandbag" name("round_sandbag") entity("sandbag2_round"))
)
(define "round_sandbag3"
	("bodykit_sandbag" name("round_sandbag") entity("dot_sack"))
)
(define "round_sandbag_ba64"
	("bodykit_sandbag" name("round_sandbag") entity("sandbags_pz35t"))
)
(define "round_sandbag_flak"
	("bodykit_sandbag" name("round_sandbag") entity("sandbags_flak"))
)
(define "round_sandbag_flak_m2"
	("bodykit_sandbag" name("round_sandbag") entity("sandbags_flak_m2"))
)
(define "round_dot"
	("bodykit_sandbag" name("round_dot") entity("sandbag_woodbeam1_001_g2"))
)
(define "round_dot2"
	("bodykit_sandbag" name("round_dot") entity("sandbag_woodbeam1_003_g2"))
)
(define "sequential_aim"
	{SequentialAim 0} ; enables simultaneous rotation with turret
)
(define "d_a"
	{armor
		{setting "d_a"
			{thickness %0}
			{volumes "d_a*"}
		}
	}
)

(define "CW_fuelbag"
	{FuelBag
		{volume (* 0.5 %Fuelvolume) }
		{rate	(* 40 (/ %Fuelvolume %Range))}
		{remain (* 0.42 %Fuelvolume) }
		{fuel "fuel"}
	}
)
(define "CW_speed_lev"
	{speed
		{Slow	(* 0.2 %Gamespeed)}
		{Normal	(* 0.6 %Gamespeed)}
		{Fast	%Gamespeed}
	}
)
(define "CW_track_moveparam"
   {MaxSpeed		%Gamespeed}
    {maxSpeedAtMaxTurn	(* 0.4 %Gamespeed)} 
;    {StartTime		(* 0.11 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}	;in LP
    {StartTime		(* 0.04 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}
;    {BrakeTime		(* (* 1.75 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {BrakeTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
;    {StopTime		(* (* 3.5 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {StopTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
    {TurnTime		(* 90 (/ %Width %Realspeed))}
    {TurnStart		(* 1 (* (/ 50 %Mass) (/ %Power 800)))}
    {TurnRadius		(* (* (/ 3 525) %Realspeed) (/ %Realspeed %Width))}
    {TurnStop		(* 0.75 (* (/ 50 %Mass) (/ %Power 800)))}
    {Gears			0.12 0.29 0.5 0.68 1}
    {RearGears		0.2}
    {GearSwitchDelay	0.5}
)
(define "CW_wheels_moveparam"
   {MaxSpeed		%Gamespeed}
    {maxSpeedAtMaxTurn	(* 0.4 %Gamespeed)}
;    {StartTime		(* 0.11 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}	;in LP
    {StartTime		(* 0.04 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}
;    {BrakeTime		(* (* 1.75 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {BrakeTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
;    {StopTime		(* (* 3.5 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {StopTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
    {TurnTime		(* 0.01 (/ %Turnradius %Gamespeed))}
    {TurnRadius		%Turnradius}
    {Gears			0.12 0.29 0.5 0.68 1}
    {RearGears		0.15 0.25}
    {GearSwitchDelay	0.5}
    {SteerOn 20}
    {SteerOff 40}
    {SplineRadius 2}
)
(mod "mp"
(define "CW_track_moveparam"
   {MaxSpeed		%Gamespeed}
    ;{maxSpeedAtMaxTurn	(* 0.4 %Gamespeed)} 
	{maxSpeedAtMaxTurn	(* 0.3 %Gamespeed)} ;23.11.21
;    {StartTime		(* 0.11 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}	;in LP
    {StartTime		(* 0.04 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}
;    {BrakeTime		(* (* 1.75 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {BrakeTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
;    {StopTime		(* (* 3.5 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {StopTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
    ;{TurnTime		(* 90 (/ %Width %Realspeed))}
	{TurnTime		(* 145 (/ %Width %Realspeed))} ;12.11.21
    {TurnStart		(* 1 (* (/ 50 %Mass) (/ %Power 800)))}
    {TurnRadius		(* (* (/ 3 525) %Realspeed) (/ %Realspeed %Width))}
    {TurnStop		(* 0.75 (* (/ 50 %Mass) (/ %Power 800)))}
    {Gears			0.12 0.29 0.5 0.68 1}
    {RearGears		0.2}
    {GearSwitchDelay	0.5}
)
(define "CW_wheels_moveparam"
   {MaxSpeed		%Gamespeed}
    ;{maxSpeedAtMaxTurn	(* 0.4 %Gamespeed)}
	 {maxSpeedAtMaxTurn	(* 0.3 %Gamespeed)} ;23.11.21
;    {StartTime		(* 0.11 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}	;in LP
    {StartTime		(* 0.04 (* %Realspeed (* %Realspeed (/ %Mass %Power))))}
;    {BrakeTime		(* (* 1.75 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {BrakeTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
;    {StopTime		(* (* 3.5 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}	;in LP
    {StopTime		(* (* 2.625 (/ %Mass 50)) (* (/ %Realspeed 60) (/ 800 %Power)))}
    {TurnTime		(* 0.01 (/ %Turnradius %Gamespeed))}
    {TurnRadius		%Turnradius}
    {Gears			0.12 0.29 0.5 0.68 1}
    {RearGears		0.15 0.25}
    {GearSwitchDelay	0.5}
    {SteerOn 20}
    {SteerOff 40}
    {SplineRadius 2}
)
)	
(define "CW_tracks"
	{Locomotion ("CW_track_moveparam" 
			Mass(%Mass)
			Width(%Width)
			Power(%Power)
			Realspeed(%Realspeed)
			Gamespeed(%Gamespeed) 
	)}
	("CW_fuelbag" Range(%Range) Fuelvolume(%Fuelvolume))
	("CW_speed_lev" Gamespeed(%Gamespeed))
)
(define "CW_wheels"
	{Locomotion ("CW_wheels_moveparam" 
			Mass(%Mass)
			Turnradius(%Turnradius)
			Power(%Power)
			Realspeed(%Realspeed)
			Gamespeed(%Gamespeed) 
	)}
	("CW_fuelbag" Range(%Range) Fuelvolume(%Fuelvolume))
	("CW_speed_lev" Gamespeed(%Gamespeed))
)
(define "CW_amphibia"
	{PatherID "amphibia"}
	{props "amphibia"}
	{Chassis
		{switch
			{exitFromWater}
			{terrain not "water" "deep_water"}
		}
	}
	{chassis "water"
		{speed
			{Slow	10	}	; km/h
			{Normal	17	}
			{Fast	30	}
		}
		{ignorePatherBounds}
		{waterline %Waterline}
		{switch
			{terrain "water" "deep_water"}
		}	
	}
	{volume "hull_integrity" {thickness 1} {component "hull_integrity"}}

    {component "hull_integrity" {RepairTime 10}  {tags "repair_lev3" "repair_lev2"}}
	;Это - способность плавать - герметичность корпуса. Волум для нее ставится в любое место корпуса, ломается при пробитиях корпуса. 
				;Чинится (заделать пробоины). При поломке машина тонет.

)

(define "CW_turr_speed"
	{bone "turret"
	             	{speed (* %deg_per_s 0.000355) }
	}
)
(define "CW_gun_rot_speed"
	{bone "gun_rot"
	             	{speed (* %deg_per_s 0.000355) }
	}
)
(define "CW_bone_speed"
	{bone "%bone"
	             	{speed (* %deg_per_s 0.000355) }
	}
)
(define "cw_veh_headlight"
	{volume "%volumename" {thickness 1} {component "%volumename"}{able clear {bullet 1}{BLAST 1}}
		{Cylinder %size}
		{bone "%bonename"}
		{Matrix34		
			0	0	1		
			0	-1	0		
			1	0	0		
			%offset	
		}
	}
	{component "%volumename" {RepairTime 5}}
)
(define "cw_headlightl" ("cw_veh_headlight" volumename(LampL) bonename(headlightl) size(1.5 1) offset(-1	0	0)))
(define "cw_headlightr" ("cw_veh_headlight" volumename(LampR) bonename(headlightr) size(1.5 1) offset(-1	0	0)))
(define "cw_headlightt" ("cw_veh_headlight" volumename(LampT) bonename(Turret_light) size(1.5 1) offset(-1	0	0)))
(define "cw_headlightt1" ("cw_veh_headlight" volumename(LampT1) bonename(Turret_light1) size(1.5 1) offset(-1	0	0)))
(define "cw_headlightt2" ("cw_veh_headlight" volumename(LampT2) bonename(Turret_light2) size(1.5 1) offset(-1	0	0)))
(define "two_headlights"
	("cw_headlightl")
	("cw_headlightr")
)
;use only after MDL extension
(define "cwts_buksir_custom"
	{props "tractor"}
		{bone "basis"
			{bone "link2"
				{Matrix34
					-1	0	0
					0	-1	0
					0	0	1
					%x	0	%z
				}
			}
		}
	{extender "inventory"
		{box
;			(mod "mp"
				{item "buksir_tros" 1}
;			)
		}
	}
	{extender "inventory"
		{box
			(mod "mp"
				{item "netting_kit" 1}
			)
		}
	}
)
(define "cwts_buksir"
	("cwts_buksir_custom" x(-70) z(15))
)
	
;===============================cwps3
(define "missile_aimpoint_custom"
	{extension "/properties/animation/vehicle/proj_point_anm.ext"}
		{bone "basis"
			{bone "cwps3_place1"
				{Matrix34
					1	0	0
					0	1	0
					0	0	1
					(* 20 %front)	(* 20 %side)	(* 20 %height)
				}
				{bone "cwps3_place"
				}
			}
		}
	{Placer
		{place "cwps_proj_point"
			{entity "cwps3_proj_point"}
			{Linkbone "cwps3_place"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "missile_aimpoint_tanksize"
	("missile_aimpoint_custom" height(0.8) front(0) side(0))
	{props "cwps3_fixmarker6"}
)
(define "missile_aimpoint_wieselsize"
	("missile_aimpoint_custom" height(0.4) front(0) side(0))
	{props "cwps3_fixmarker3"}
)
(define "missile_aimpoint_stansize"
	;("missile_aimpoint_custom" height(0.25) front(0) side(0))
)
(define "missile_aimpoint_boatsize"
	("missile_aimpoint_custom" height(0.25) front(0) side(0))
)
(define "missile_aimpoint_trucksize"
	("missile_aimpoint_custom" height(1.0) front(0) side(0))
	{props "cwps3_fixmarker5"}
)
(define "missile_aimpoint_air"
	("missile_aimpoint_custom" height(0) front(0) side(0))
	{props "cwps3_fixmarker6"}
)
(define "missile_aimpoint_ship_medium"
	{Placer
		{place "cwps_proj_point"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter1"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body1"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter2"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body2"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter3"
			{entity "cwps3_proj_point"}
			{Linkbone "bridge_holder"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "missile_aimpoint_submarine_medium"
	{Placer
		{place "cwps_proj_point"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter1"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body1"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter2"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body2"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "missile_aimpoint_ship_big"
	("missile_aimpoint_ship_medium")
	{Placer
		{place "cwps_emitter4"
			{entity "cwps3_proj_point"}
			{Linkbone "bridge"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter5"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body3"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter6"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body4"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "missile_aimpoint_submarine_big"
	("missile_aimpoint_submarine_medium")
	{Placer
		{place "cwps_emitter5"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body3"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter6"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_body4"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "missile_aimpoint_ship_part"
	{Placer
		{place "cwps_proj_point"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_%partname"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "missile_aimpoint_ship_main"
	{Placer
		{place "cwps_proj_point"
			{entity "cwps3_proj_point"}
			{Linkbone "proj_point_holder_%partname"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter3"
			{entity "cwps3_proj_point"}
			{Linkbone "bridge_holder"}
			{handlebone "Basis"}
			{obstacle disable}
		}
		{place "cwps_emitter4"
			{entity "cwps3_proj_point"}
			{Linkbone "bridge"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
)
(define "sam_radar"
	(mod "mp"
		{props "sam_radar_%type"}
	)
	{props "sam_radar"}
	{Placer
		{place "vehicle9"
		(mod not "mp"
			{entity "proj_point_%type_antirad_spawner"}
		)
			{Linkbone "basis"}
			{handlebone "Basis"}
			{obstacle disable}
		}
	}
	{component "zpu_indicator"}
)
(define "recoil_side_volumes"	;support of side gun recoil
	{volume "recoil_gun_front" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_left" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_right" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_back" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_baleft" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_baright" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_frright" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{volume "recoil_gun_frleft" {component "recoil_gun"}{thickness 30}{tags "gun_recoil"}{able clear {NoWoundDecal}}}
	{component "recoil_gun"}
)
(define "recoil_side_common"
	{extension "/properties/animation/vehicle/recoil_side_anm.ext"}
)
(define "cw_supply_truck"
	{extender "auto_restore_warehouse"
		{radius 15}
		{type "consumable"}
	}
)
(define "cw_fuel_truck"
	{extender "auto_restore_fuel_point"
		{radius 15}
		{type "consumable"}
	}
)
;=====================suspension===================
;MOW2
(define "trackl_support_parameters"
	{parameters "id=trackleft;radius=%r;support=1;"}
)
(define "trackr_support_parameters"
	{parameters "id=trackright;radius=%r;support=1;"}
)
(define "wheel_support_parameters"
	{parameters "radius=%r;support=1;"}
)
(define "wheell_support_parameters"
	{parameters "id=wheelleft;radius=%r;support=1;"}
)
(define "wheelr_support_parameters"
	{parameters "id=wheelright;radius=%r;support=1;"}
)
(define "support_bones"
	{bone "wheell%n"
		("%lname_support_parameters" r(%r))
	}
	{bone "wheelr%n"
		("%rname_support_parameters" r(%r))
	}
)

;CW
;%down is static limit (difference between normal position and position when hull is hanged and wheels do not touch ground)
;%up is dynamic limit (difference between normal position and position of maximum stress on steering)


;tracked suspension features minor differences in stat/dyn limits of each wheel.
;So it is necessary to input maximal and minimal numbers
;first and last wheel features minimal static and maximal dynamic limit, middle wheels are vice versa

;%downw %upw means how close is wheel to the middle. 1 means middle wheel, 0 means first or last wheel
(define "cw_trackwheel_susp"
	{bone "rollerl%n_joint"	{limits (* %downmax  %downw) (* %upmax  %upw)}	{speed 0.5}}
	{bone "rollerr%n_joint"	{limits (* %downmax  %downw) (* %upmax  %upw)}	{speed 0.5}}

	{bone "rollerl%n"	{parameters "id=trackleft;radius=%r;support=%support;"}}
	{bone "rollerr%n"	{parameters "id=trackright;radius=%r;support=%support;"}}
	
	{bone "wheell%n"	{parameters "id=trackleft;radius=%r;support=%support;"}}
	{bone "wheelr%n"	{parameters "id=trackright;radius=%r;support=%support;"}}

)

(define "cw_suspension_5tracks"
	{bone "basis" {parameters "Wheelradius=%r;"}}
	("cw_trackwheel_susp" n(2) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(3) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(4) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(5) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(6) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	{bone "wheell1"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr1"	{parameters "id=trackright;radius=%r;support=1"}}
	{bone "wheell7"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr7"	{parameters "id=trackright;radius=%r;support=1"}}
)
(define "cw_suspension_5tracks_alt"	;когда wheell2 на rollerl1
	{bone "basis" {parameters "Wheelradius=%r;"}}
	("cw_trackwheel_susp" n(1) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(2) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(3) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(4) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(5) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	{bone "wheell6"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr6"	{parameters "id=trackright;radius=%r;support=1"}}
)
(define "cw_suspension_6tracks"
	{bone "basis" {parameters "Wheelradius=%r;"}}
	("cw_trackwheel_susp" n(2) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(3) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(4) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(5) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(6) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(7) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	{bone "wheell1"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr1"	{parameters "id=trackright;radius=%r;support=1"}}
	{bone "wheell8"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr8"	{parameters "id=trackright;radius=%r;support=1"}}
)
(define "cw_suspension_6tracks_alt"
	{bone "basis" {parameters "Wheelradius=%r;"}}
	("cw_trackwheel_susp" n(1) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(2) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(3) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(4) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(5) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(6) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	{bone "wheell7"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr7"	{parameters "id=trackright;radius=%r;support=1"}}
)
(define "cw_suspension_7tracks"
	{bone "basis" {parameters "Wheelradius=%r;"}}
	("cw_trackwheel_susp" n(2) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(3) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(4) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(5) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(6) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(7) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(8) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	{bone "wheell1"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr1"	{parameters "id=trackright;radius=%r;support=1"}}
	{bone "wheell9"	{parameters "id=trackleft;radius=%r;support=1"}}
	{bone "wheelr9"	{parameters "id=trackright;radius=%r;support=1"}}
)
(define "cw_suspension_4wheels"
	{bone "basis" {parameters "Wheelradius=%r;"}}
	("cw_trackwheel_susp" n(1) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
	("cw_trackwheel_susp" n(2) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
)
(define "cw_suspension_6wheels"
	("cw_suspension_4wheels" downmax(%downmax) upmax(%upmax) r(%r))
	("cw_trackwheel_susp" n(3) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
)
(define "cw_suspension_8wheels"
	("cw_suspension_6wheels" downmax(%downmax) upmax(%upmax) r(%r))
	("cw_trackwheel_susp" n(4) downw(1) downmax(%downmax) upw(1) upmax(%upmax) r(%r) support(1))
)
;====================dig_in==================
(define "auto_dig_in"
	{extender "bodykit"
		{"trench_cannon"
			{delay 20}
			{drop_on_move 0}
			{"trench_cannon_big_tank" "basis" {no_link}}
		}	
	}
)